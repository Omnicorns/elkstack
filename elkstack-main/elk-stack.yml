# ELK Stack YAML - Updated to Use index => "logstash-*" for better index creation

# -------------------------------
# Service Accounts
# -------------------------------
apiVersion: v1
kind: ServiceAccount
metadata:
  name: elasticsearch-logging
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: logstash
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: filebeat
  namespace: kube-system
---

apiVersion: v1
kind: Service
metadata:
  name: logstash-nodeport
  namespace: kube-system
spec:
  type: NodePort
  selector:
    app: logstash
  ports:
    - protocol: TCP
      port: 5044
      targetPort: 5044
      nodePort: 32044  # kamu bisa ganti ini jika bentrok
---

# -------------------------------
# Elasticsearch ConfigMap & StatefulSet
# -------------------------------
apiVersion: v1
kind: ConfigMap
metadata:
  name: es-config
  namespace: kube-system
data:
  elasticsearch.yml: |
    network.host: "0.0.0.0"
    bootstrap.memory_lock: false
    xpack.security.enabled: false
    xpack.security.http.ssl.enabled: false
    xpack.security.transport.ssl.enabled: false
    cluster.initial_master_nodes: ["elasticsearch-logging-0"]
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch-logging
  namespace: kube-system
spec:
  serviceName: elasticsearch-logging
  replicas: 1
  selector:
    matchLabels:
      k8s-app: elasticsearch-logging
  template:
    metadata:
      labels:
        k8s-app: elasticsearch-logging
    spec:
      serviceAccountName: elasticsearch-logging
      containers:
        - name: elasticsearch-logging
          image: docker.elastic.co/elasticsearch/elasticsearch:8.6.0
          ports:
            - containerPort: 9200
              name: db
            - containerPort: 9300
              name: transport
          env:
            - name: ES_JAVA_OPTS
              value: "-Xms256m -Xmx256m"
          volumeMounts:
            - name: es-config-volume
              mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
              subPath: elasticsearch.yml
      volumes:
        - name: es-config-volume
          configMap:
            name: es-config
            items:
              - key: elasticsearch.yml
                path: elasticsearch.yml
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch-logging
  namespace: kube-system
spec:
  selector:
    k8s-app: elasticsearch-logging
  ports:
    - protocol: TCP
      port: 9200
      targetPort: db
  type: ClusterIP

# -------------------------------
# Logstash ConfigMap, Deployment, and Service
# -------------------------------
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-configmap
  namespace: kube-system
data:
  logstash.yml: |
    http.host: "0.0.0.0"
    path.config: /usr/share/logstash/pipeline
  logstash.conf: |
    input {
      tcp {
        port => 5044
        codec => json_lines
      }
    }

    filter {}

    output {
      stdout { codec => rubydebug }

      elasticsearch {
        hosts => ["http://elasticsearch-logging.kube-system.svc.cluster.local:9200"]
        index => "logstash-%{+YYYY.MM.dd}"
        data_stream => false
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash-deployment
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: logstash
  template:
    metadata:
      labels:
        app: logstash
    spec:
      containers:
        - name: logstash
          image: docker.elastic.co/logstash/logstash:8.6.0
          ports:
            - containerPort: 5044
          volumeMounts:
            - name: config-volume
              mountPath: /usr/share/logstash/config/logstash.yml
              subPath: logstash.yml
            - name: pipeline-volume
              mountPath: /usr/share/logstash/pipeline/logstash.conf
              subPath: logstash.conf
      volumes:
        - name: config-volume
          configMap:
            name: logstash-configmap
        - name: pipeline-volume
          configMap:
            name: logstash-configmap
---
apiVersion: v1
kind: Service
metadata:
  name: logstash-service
  namespace: kube-system
spec:
  selector:
    app: logstash
  ports:
    - protocol: TCP
      port: 5044
      targetPort: 5044

# -------------------------------
# Filebeat DaemonSet & ConfigMap
# -------------------------------
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: filebeat-config
  namespace: kube-system
data:
  filebeat.yml: |-
    filebeat:
      inputs:
        - type: log
          paths:
            - /var/log/spring-boot-elk.log
          multiline.pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}'
          multiline.negate: true
          multiline.match: after

    output:
      logstash:
        hosts: ["logstash-service:5044"]
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: filebeat
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: filebeat
  template:
    metadata:
      labels:
        k8s-app: filebeat
    spec:
      serviceAccountName: filebeat
      terminationGracePeriodSeconds: 30
      containers:
        - name: filebeat
          image: docker.elastic.co/beats/filebeat:8.6.0
          args: ["-c", "/etc/filebeat.yml", "-e"]
          securityContext:
            runAsUser: 0
          volumeMounts:
            - name: config
              mountPath: /etc/filebeat.yml
              subPath: filebeat.yml
            - name: data
              mountPath: /usr/share/filebeat/data
            - name: varlog
              mountPath: /var/log
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: filebeat-config
        - name: data
          emptyDir: {}
        - name: varlog
          hostPath:
            path: /var/log

# -------------------------------
# Kibana Deployment + NodePort Service
# -------------------------------
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana-logging
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: kibana-logging
  template:
    metadata:
      labels:
        k8s-app: kibana-logging
    spec:
      containers:
        - name: kibana-logging
          image: docker.elastic.co/kibana/kibana:8.6.0
          ports:
            - containerPort: 5601
          env:
            - name: ELASTICSEARCH_HOSTS
              value: "http://elasticsearch-logging:9200"
---
apiVersion: v1
kind: Service
metadata:
  name: kibana-logging
  namespace: kube-system
spec:
  type: NodePort
  selector:
    k8s-app: kibana-logging
  ports:
    - protocol: TCP
      port: 5601
      targetPort: 5601
      nodePort: 31501
